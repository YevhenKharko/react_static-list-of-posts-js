{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","body","email","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","commentId","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"uz8IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,KACAC,EACEH,EADFG,MAGF,OACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IACtC,OACD,mBACEG,UAAU,qBACVC,KAAI,iBAAYF,GAFlB,SAIGA,OAGL,qBAAKC,UAAU,oBAAf,SACGF,QCjBII,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQS,WCNRC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBR,EAEEQ,EAFFR,MACAF,EACEU,EADFV,KAGF,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SAAkDF,MCLzCW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAH,EAGEE,EAHFF,KACAT,EAEEW,EAFFX,KACAK,EACEM,EADFN,SAGF,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAEH,8BACG,eACD,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGP,UAAU,iBAAb,SACGF,IAGFK,EAASQ,OAAS,EACf,cAAC,EAAD,CAAaR,SAAUA,EAAUI,KAAMA,IAEvC,qCACE,uBACA,mBAAG,UAAQ,oBAAX,qCC/BCK,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKJ,U,qBCMZQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MARkBQ,EAQAN,EAAKM,OARKC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAC9D,MAQPZ,UANqBe,EAMIT,EAAKJ,GANIc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWH,MACnF,QADc,IAAAA,EAHHH,KAYPO,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CACEa,MAAOA,QCpBbU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b0ccc947.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    body,\n    email,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n        {' by '}\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n      </div>\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n        key={comment.id}\n      />\n    ))}\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    email,\n    name,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>{name}</a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    user,\n    body,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n        <p>\n          {' Posted by  '}\n          <UserInfo user={user} />\n        </p>\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      {comments.length > 0\n        ? <CommentList comments={comments} user={user} />\n        : (\n          <>\n            <hr />\n            <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n          </>\n        )\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        post={post}\n        key={post.id}\n      />\n    ))\n    }\n  </div>\n);\n","import './App.scss';\nimport { PostList } from './components/PostList';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nconst getUserById = userId => usersFromServer.find(user => user.id === userId)\n      || null;\n// eslint-disable-next-line\nconst getCommentById = commentId => commentsFromServer.filter(comment => comment.postId === commentId)\n      || null;\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList\n      posts={posts}\n    />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}